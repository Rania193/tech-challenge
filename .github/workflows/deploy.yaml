name: CI/CD Pipeline
on:
  push:
    branches: [main]
permissions:    
  id-token: write   # This is required for receiving the JWT  
  contents: write    # This is required for actions/checkout 
jobs:
  validate-terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.4
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (matrix.environment.name == 'dev' || startsWith(github.ref, 'refs/tags/release/'))
    # needs: validate-terraform
    strategy:
      matrix:
        environment:
          - name: dev
            namespace: dev
            aws-role: arn:aws:iam::905317844123:role/kantox-challenge-github-actions-dev
            values-file: values-dev.yaml
          - name: prod
            namespace: prod
            aws-role: arn:aws:iam::905317844123:role/kantox-challenge-github-actions-dev  # Same role for testing
            values-file: values-prod.yaml
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ matrix.environment.aws-role }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and Push Main API
        run: |
          echo "Building Main API image for ${{ matrix.environment.name }}..."
          docker build -t ${{ steps.login-ecr.outputs.registry }}/main-api:${{ github.sha }} ./main-api
          echo "Pushing Main API image..."
          docker push ${{ steps.login-ecr.outputs.registry }}/main-api:${{ github.sha }}
      - name: Build and Push Auxiliary Service
        run: |
          echo "Building Auxiliary Service image for ${{ matrix.environment.name }}..."
          docker build -t ${{ steps.login-ecr.outputs.registry }}/auxiliary-service:${{ github.sha }} ./auxiliary-service
          echo "Pushing Auxiliary Service image..."
          docker push ${{ steps.login-ecr.outputs.registry }}/auxiliary-service:${{ github.sha }}
      - name: Install yq
        run: |
          sudo snap install yq
      - name: Update Helm Values for Dev - Auxiliary Service
        run: |
          echo "Updating Auxiliary Service Helm values for ${{ matrix.environment.values-file }} ..."
          yq e -i '.image.tag = "${{ github.sha }}"' myhelmcharts/charts/auxiliary-service/${{ matrix.environment.values-file }}
          yq e -i '.version = "${{ github.sha }}"' myhelmcharts/charts/auxiliary-service/${{ matrix.environment.values-file }}
      - name: Update Helm Values for Dev - Main API
        run: |
          echo "Updating Main API Helm values for ${{ matrix.environment.values-file }} ..."
          yq e -i '.image.tag = "${{ github.sha }}"' myhelmcharts/charts/main-api/${{ matrix.environment.values-file }}
          yq e -i '.version = "${{ github.sha }}"' myhelmcharts/charts/main-api/${{ matrix.environment.values-file }}
      - name: Commit and Push Changes
        run: |
          echo "Committing updated manifests..."
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add myhelmcharts/charts/
          git commit -m "Update Helm ${{ matrix.environment.values-file }} for ${{ matrix.environment.name }} with version ${{ github.sha }}" || echo "No changes to commit"
          git push